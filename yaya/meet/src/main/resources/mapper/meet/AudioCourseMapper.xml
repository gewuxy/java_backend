<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.medcn.meet.dao.AudioCourseDAO" >

    <select id="findResourceCategorys" resultType="cn.medcn.meet.dto.ResourceCategoryDTO">
        SELECT c.category as name, count(c.category) as count
        FROM t_audio_course c
        WHERE c.source_type != 1 AND c.shared = true
        AND c.primitive_id = 0 AND c.published = true
        AND c.deleted != 1 AND
        NOT EXISTS(select id from t_audio_course WHERE owner = #{userId} and primitive_id = c.id)
        GROUP BY c.category
    </select>

    <select id="findResource" resultType="cn.medcn.meet.dto.CourseReprintDTO">
        SELECT c.id,c.title,c.category,c.create_time,c.owner,u.nickname as pub_user_name,c.credits, d.img_url as cover_url
        FROM t_audio_course c
        LEFT JOIN t_app_user u ON u.id = c.owner
        LEFT JOIN t_audio_course_detail d ON d.course_id = c.id AND d.sort = 1
        WHERE c.source_type != 1 AND c.shared = true AND c.primitive_id = 0
        AND c.published = true AND c.deleted != 1
        <if test="category != null">
            AND c.category = #{category}
        </if>
        <if test="keyword != null">
            AND c.title like CONCAT('%',#{keyword}, '%')
        </if>
        AND NOT EXISTS(select id from t_audio_course WHERE owner= #{userId} and primitive_id = c.id)
        ORDER BY c.create_time DESC
    </select>

    <select id="findMyReprints" resultType="cn.medcn.meet.dto.CourseReprintDTO">
        SELECT c.id, c.title, u.nickname as pub_user_name, d.img_url as cover_url,u.username,u.headimg
        FROM t_audio_course c
        LEFT JOIN t_audio_course r on r.id = c.primitive_id
        LEFT JOIN t_audio_course_detail d ON d.course_id = c.id AND d.sort = 1
        LEFT JOIN t_app_user u ON u.id = r.owner
        WHERE c.source_type != 1 AND c.shared = true
        AND c.primitive_id > 0 AND c.published = true
        AND c.deleted != 1 AND c.owner = #{userId}
        <if test="keyword != null">
            AND c.title like CONCAT('%',#{keyword}, '%')
        </if>
    </select>

    <select id="findMyShared" resultType="cn.medcn.meet.dto.CourseSharedDTO">
        SELECT c.id, c.title, c.shared, count(r.id) as reprintCount FROM t_audio_course c
        LEFT JOIN t_audio_course r ON r.primitive_id = c.id
        WHERE c.primitive_id=0 AND c.owner = #{userId} AND c.published = true
        <if test="keyword != null">
            AND c.title like CONCAT('%',#{keyword}, '%')
        </if>
        GROUP BY c.id
    </select>

    <select id="findMyReprinted" resultType="cn.medcn.meet.dto.CourseReprintDTO">
        SELECT c.id, c.title, u.nickname as pub_user_name, r.create_time FROM t_audio_course c
        INNER JOIN t_audio_course r on r.primitive_id=c.id
        INNER JOIN t_app_user u on u.id = r.owner
        WHERE c.owner = #{userId}
        <if test="keyword != null">
            AND c.title like CONCAT('%',#{keyword}, '%')
        </if>
        ORDER BY r.create_time DESC
    </select>


    <!-- csp method sql for web-->
    <select id="findCspMeetingList" resultType="cn.medcn.meet.dto.CourseDeliveryDTO">
        SELECT c.id, c.title, c.play_type, l.start_time, l.end_time, l.live_state, l.live_page,c.locked,
        cd.img_url as cover_url, count(cd.id) as page_count,SUM(cd.duration) as duration,
        p.play_page,p.play_state, c.info,c.category_id
        FROM t_audio_course c
        LEFT JOIN t_csp_live l ON l.course_id = c.id
        LEFT JOIN t_audio_course_detail cd ON c.id = cd.course_id
        LEFT JOIN t_csp_audio_course_play p ON p.course_id = c.id
        WHERE c.csp_user_id = #{cspUserId} AND c.published = 1
        AND c.deleted != 1
        <if test="playType != null">
            <choose>
                <when test="playType == 0">
                    AND c.play_type = 0
                </when>
                <otherwise>
                    AND c.play_type > 0
                </otherwise>
            </choose>
        </if>
        <if test="keyword != null">
            AND c.title LIKE CONCAT('%',#{keyword}, '%')
        </if>
        GROUP BY c.id
    </select>
    <!-- for api -->
    <select id="findCspMeetingListForApp" resultType="cn.medcn.meet.dto.CourseDeliveryDTO">
        SELECT c.id, c.title, c.play_type, l.start_time, l.end_time, l.live_state, l.live_page,c.locked,
        cd.img_url as cover_url, count(cd.id) as page_count,SUM(cd.duration) as duration,
        p.play_page,p.play_state, c.info,c.category_id
        FROM t_audio_course c
        LEFT JOIN t_csp_live l ON l.course_id = c.id
        LEFT JOIN t_audio_course_detail cd ON c.id = cd.course_id
        LEFT JOIN t_csp_audio_course_play p ON p.course_id = c.id
        WHERE c.csp_user_id = #{cspUserId} AND c.published = 1
        AND c.deleted != 1 AND locked != 1
        <if test="playType != null">
            <choose>
                <when test="playType == 0">
                    AND c.play_type = 0
                </when>
                <otherwise>
                    AND c.play_type > 0
                </otherwise>
            </choose>
        </if>
        <if test="keyword != null">
            AND c.title LIKE CONCAT('%',#{keyword}, '%')
        </if>
        GROUP BY c.id
    </select>

    <select id="findLastDraft" resultType="cn.medcn.meet.model.AudioCourse">
        SELECT * FROM t_audio_course WHERE csp_user_id = #{cspUserId} AND published = 0 limit 1
    </select>

    <select id="findHistoryDeliveryByAcceptId" resultType="cn.medcn.meet.dto.CourseDeliveryDTO">
        SELECT tc.id,tc.title,tc.play_type,tcd.img_url AS cover_url,td.view_state,td.publish_state FROM t_csp_delivery td
        INNER JOIN t_audio_course tc ON td.source_id = tc.id
        LEFT JOIN t_audio_course_detail tcd ON tcd.course_id = tc.id AND tcd.sort=1
        WHERE td.author_id = #{authorId} AND td.accept_id = #{acceptId} ORDER BY td.delivery_time DESC
    </select>

    <select id="findAllMeetForManage" resultType="cn.medcn.meet.model.AudioCourse">
        SELECT c.id,c.deleted,c.`title`,c.`category`,c.`create_time`,c.`published`,c.`share_type`,c.`play_type`,
        csu.`user_name`,cl.start_time,csu.id AS userId
        FROM `t_audio_course` c
        LEFT JOIN `t_csp_user_info` csu ON c.`csp_user_id` = csu.`id`
        LEFT JOIN t_csp_live cl ON cl.course_id = c.id
        WHERE c.`source_type` = 1
        <if test="keyword != null">
            AND c.title LIKE CONCAT('%',#{keyword}, '%')
        </if>
        <if test="deleted != null">
            AND c.deleted = #{deleted}
        </if>
        ORDER BY c.create_time DESC
    </select>

    <select id="findMeetDetail" resultType="cn.medcn.meet.dto.CourseDeliveryDTO">
        SELECT c.id, c.title, c.play_type, i.user_name as name ,i.email,l.start_time, l.end_time, l.live_state, l.live_page,
        cd.img_url as cover_url, count(cd.id) as page_count,SUM(cd.duration) as duration,
        p.play_page,p.play_state, c.info,c.category_id
        FROM t_audio_course c
        LEFT JOIN t_csp_user_info i on c.csp_user_id = i.id
        LEFT JOIN t_csp_live l ON l.course_id = c.id
        LEFT JOIN t_audio_course_detail cd ON c.id = cd.course_id
        LEFT JOIN t_csp_audio_course_play p ON p.course_id = c.id
        WHERE c.id = #{id} GROUP BY c.id
    </select>

    <select id="findAudioCourseList" resultType="cn.medcn.meet.model.AudioCourse">
        SELECT * from t_audio_course where source_type = 1
        and deleted != 1 AND locked != 1 AND csp_user_id = #{cspUserId}
        ORDER BY create_time asc
    </select>
    
    <select id="findEarliestCourse" resultType="cn.medcn.meet.model.AudioCourse">
        select * FROM t_audio_course WHERE csp_user_id = #{cspUserId} AND locked = true AND deleted = false AND guide != 1 ORDER by create_time asc limit 1
    </select>

    <update id="updateByUserId">
        UPDATE t_audio_course SET locked = 1 WHERE csp_user_id = #{cspUserId} AND source_type = 1 AND guide != 1
        and deleted != 1 AND published = 1;
    </update>

    <update id="updateByUserIdOpen">
       UPDATE t_audio_course SET locked = 0 WHERE csp_user_id = #{cspUserId} and id  in
       (select c.id from (SELECT * FROM t_audio_course WHERE csp_user_id = #{cspUserId} AND source_type = 1 AND published = 1
        and deleted != 1 AND guide != 1 ORDER BY create_time asc limit #{meets}) as c );
    </update>

    <update id="updateByUserIdOpenAll">
        UPDATE t_audio_course SET locked = 0 WHERE csp_user_id = #{cspUserId} AND source_type = 1
        and deleted != 1 AND guide != 1 AND published = 1 ORDER BY create_time asc;
    </update>
</mapper>